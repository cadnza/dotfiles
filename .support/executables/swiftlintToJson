#!/usr/bin/env bash

# shellcheck disable=SC2015

# Make sure swiftlint is installed
which swiftlint &>/dev/null || {
    echo "Please install swiftlint" >&2
    exit 1
}

# Make sure jq is installed
which jq &>/dev/null || {
    echo "Please install jq" >&2
    exit 1
}

# Open final JSON
final='[]'

# Open loop lines in config summary
while read -r line; do

    # Skip formatting lines
    [ "$(echo "$line" | grep -pc "^\+")" = 1 ] && continue

    # Remove whitespace
    line=$(echo "$line" | perl -pe "s/ +//g")

    # Define function to convert yes/no to true/false
    yn() {
        if [ "$1" = "yes" ]; then
            echo true
        else
            echo false
        fi
    }

    # Get relevant keys
    id=$(echo "$line" | cut -d"|" -f2)
    optin=$(echo "$line" | cut -d"|" -f3)
    correctable=$(echo "$line" | cut -d"|" -f4)
    enabled=$(echo "$line" | cut -d"|" -f5)
    kind=$(echo "$line" | cut -d"|" -f6)
    analyzer=$(echo "$line" | cut -d"|" -f7)

    # Skip header
    [ "$id" = "identifier" ] && continue

    # Synthesize object
    obj="$(
        jq \
            -n \
            --arg id "$id" \
            --argjson optin "$(yn "$optin")" \
            --argjson correctable "$(yn "$correctable")" \
            --argjson enabled "$(yn "$enabled")" \
            --arg kind "$kind" \
            --argjson analyzer "$(yn "$analyzer")" \
            '{
				id: $id,
				optin: $optin,
				correctable: $correctable,
				enabled: $enabled,
				kind: $kind,
				analyzer: $analyzer
			}'
    )"

    # Append object to JSON
    final="$(
        jq \
            -n \
            --argjson obj "$obj" \
            --argjson final "$final" \
            '$final + [$obj]'
    )"

    # Close loop
done < <(swiftlint rules "$@")

# Return JSON
echo "$final" | jq -Mc

# Exit
exit 0
