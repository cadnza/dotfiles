#!/usr/bin/env bash

# shellcheck disable=SC2015

# Make sure swiftlint is installed
which swiftlint &> /dev/null || {
	echo "Please install swiftlint" >&2
	exit 1
}

# Assign argument
f=$1

# Make sure file is named .swiftlint.yml (rigid, but safe)
wants=".swiftlint.yml"
[ "$(basename "$f" 2> /dev/null )" = $wants ] 2> /dev/null || {
	echo "Please supply a file called $wants." >&2
	exit 1
}

# Make sure file exists
[ -f "$f" ] || {
	echo "$f does not exist." >&2
	exit 1
}

# Open final list
final=()

# Set status
didFindIssues=0

# Open loop lines in config summary
while read -r line
do

	# Skip formatting lines
	[ "$(echo "$line" | grep -pc "^\+")" = 1 ] && continue

	# Remove whitespace
	line=$(echo "$line" | perl -pe "s/ +//g")

	# Get relevant keys
	id=$(echo "$line" | cut -d"|" -f2)
	optin=$(echo "$line" | cut -d"|" -f3)
	correctable=$(echo "$line" | cut -d"|" -f4)
	enabled=$(echo "$line" | cut -d"|" -f5)
	kind=$(echo "$line" | cut -d"|" -f6)

	# Skip header
	[ "$id" = "identifier" ] && continue

	# Skip identifiers that are either opt-in and enabled or default and disabled
	[ "$optin" = "$enabled" ] && continue

	# Format correctable
	[ "$correctable" = "yes" ] && correctable="correctable" || correctable=""

	# Assign color for rule kind
	kindColor=""
	[ "$kind" = "lint" ] && kindColor=3
	[ "$kind" = "idiomatic" ] && kindColor=6
	[ "$kind" = "style" ] && kindColor=4
	[ "$kind" = "metrics" ] && kindColor=2
	[ "$kind" = "performance" ] && kindColor=1

	# Pad keys
	kind=$(printf "%-12s" "$kind")
	correctable=$(printf "%-12s" "$correctable")

	# Formalize color variables
	clrKind=$(tput setaf "$kindColor")
	clrCorrectable=$(tput setaf 10)
	clrFaded=$(tput setaf 8)
	nrml=$(tput sgr0)

	# Synthesize URL
	url="${clrFaded}https://realm.github.io/SwiftLint/${clrKind}$id${clrFaded}.html${nrml}"

	# Add rules to appropriate lists
	[ "$optin" = "yes" ] && {
		label="OPT-IN  CAN ENABLE"
	} || {
		label="DEFAULT CAN DISABLE"
	}
	final+=(
		"$(
			printf \
				"%-20s %s %s %s" \
				"$label" \
				"${clrKind}$kind${nrml}" \
				"${clrCorrectable}$correctable${nrml}" \
				"$url"
		)"
	)
	didFindIssues=1

# Close loop
done < <(swiftlint rules --config "$f")

# Show results
[ "$didFindIssues" = 1 ] && printf '%s\n' "${final[@]}" | sort >&2

# Exit
exit 0
