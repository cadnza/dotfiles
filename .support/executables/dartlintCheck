#!/usr/bin/env bash

# Makes sure that all current dart rules are assigned in your
# analysis_options.yaml (so your config can stay up to date).

# Make sure yq is installed
which yq &> /dev/null || {
	echo "Please install yq" >&2
	exit 1
}

# Assign argument
f=$1

# Make sure file is named analysis_options.yaml (rigid, but safe)
wants=analysis_options.yaml
[ $(basename $f) = $wants ] || {
	echo "Please supply a file called $wants." >&2
	exit 1
}

# Make sure file exists
[ -f $f ] || {
	echo "$f does not exist." >&2
	exit 1
}

# Pull in master list and start to loop through all linter rules
curl -s https://dart.dev/tools/linter-rules/all | \
	xmllint --html --xpath "/html/body/main//code[contains(@class,'yaml')]/text()" - \
	2> /dev/null | \
	yq -r -o json ".linter.rules" | \
	jq -r ".[]" | \
while read -r allRule
do
	# Check whether rule exists in config
	isInConfig=$(
		cat $f | \
			yq -o json ".linter.rules" | \
			jq -r "has(\"$allRule\")"
	)
	# Notify if rule is missing
	[ $isInConfig = true ] || \
		echo -e "\033[1;31mMissing rule:\033[0m https://dart.dev/tools/linter-rules/\033[36m$allRule\033[0m"
done

# Exit
exit 0
